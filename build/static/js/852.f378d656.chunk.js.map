{"version":3,"file":"static/js/852.f378d656.chunk.js","mappings":"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","sources":["pages/projects/demos/giphy-app/components/GiphyViewer.js","pages/projects/demos/giphy-app/App.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from 'react';\r\nimport { Card, Row, Button, Dropdown, DropdownButton } from 'react-bootstrap';\r\n\r\nconst GIPHY_URL = 'https://api.giphy.com/v1/gifs';\r\nconst API_KEY = 'ld7uR2ZapD9Ae4pzCZFJrBRyF1FMAeRW';\r\n\r\nconst GiphyViewer = () => {\r\n\r\n    const [gifs, setGifs] = useState([]);\r\n    const [term, setTerm] = useState(\"\");\r\n    const [limit, setLimit] = useState(15);\r\n\r\n    useEffect(() => {\r\n        getTrending();\r\n    }, []);\r\n\r\n    const handleTrendingClick = () => {\r\n        getTrending();\r\n    };\r\n\r\n    const getTrending = () => {\r\n        axios.get(`${GIPHY_URL}/trending?api_key=${API_KEY}&limit=${limit}`)\r\n             .then((response) => {\r\n                console.log(response.data.data);\r\n                setGifs(response.data.data);\r\n             })\r\n             .catch((error) => {\r\n                console.log(error);\r\n             });\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setTerm(e.target.value);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        searchGif();\r\n    };\r\n\r\n    const handleRandomClick = () => {\r\n        axios.get(`${GIPHY_URL}/random?api_key=${API_KEY}`)\r\n             .then((response) => {\r\n                setGifs([response.data.data]);\r\n             })\r\n             .catch((error) => {\r\n                console.log(error);\r\n             });\r\n    };\r\n\r\n    const handleKeyUp = (e) => {\r\n        if(e.key === 'Enter'){\r\n            searchGif();\r\n        }\r\n        \r\n    };\r\n\r\n    const searchGif = () => {\r\n\r\n        if(!term){\r\n            alert(\"Please enter a search term!\");\r\n            return;\r\n        }\r\n\r\n        axios.get(`${GIPHY_URL}/search?api_key=${API_KEY}&q=${term}&limit=${limit}`)\r\n        .then((response) => {\r\n           setGifs(response.data.data);\r\n        })\r\n        .catch((error) => {\r\n           console.log(error);\r\n        });\r\n\r\n        setTerm(\"\");\r\n    };\r\n\r\n    const handleSelect = (amount) => {\r\n        setLimit(amount);\r\n    };\r\n\r\n    const gifComponents = gifs.map((g) => {\r\n        return (\r\n            <GIFCard key={g.id} title={g.title} url={g.url} image={g.images.fixed_width.url} />\r\n        );\r\n    });\r\n    \r\n\r\n    return (\r\n        <> \r\n            <div className=\"search\">\r\n                <input type=\"text\" value={term} onChange={handleChange} onKeyUp={handleKeyUp} />\r\n                <Button variant=\"primary\" onClick={handleClick}>Search</Button>\r\n                <Button variant=\"info\" onClick={handleTrendingClick}>Trending</Button>\r\n                <Button variant=\"warning\" onClick={handleRandomClick}>Random</Button>\r\n\r\n                <DropdownButton onSelect={handleSelect} size=\"sm\" id=\"dropdown-basic-button\" title=\"Limit\" variant=\"secondary\">\r\n                    <Dropdown.Item eventKey={15}>15</Dropdown.Item>\r\n                    <Dropdown.Item eventKey={20}>20</Dropdown.Item>\r\n                    <Dropdown.Item eventKey={25}>25</Dropdown.Item>\r\n                    <Dropdown.Item eventKey={50}>50</Dropdown.Item>\r\n                </DropdownButton>\r\n\r\n            </div>\r\n            <Row className=\"g-4\" md={3} xs={1}>\r\n                {gifComponents}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst GIFCard = (props) => {\r\n    return (\r\n        <Card>\r\n            <Card.Img variant=\"top\" src={props.image} />\r\n            <Card.Body>\r\n                <Card.Title><a href={props.url} target=\"_blank\" >{props.title}</a></Card.Title>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nexport default GiphyViewer;","import { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport GiphyViewer from \"./components/GiphyViewer\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './assets/app.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Row>\r\n        <Col>\r\n          <GiphyViewer />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["GIPHY_URL","API_KEY","GIFCard","props","_jsxs","Card","children","_jsx","Img","variant","src","image","Body","Title","href","url","target","title","GiphyViewer","gifs","setGifs","useState","term","setTerm","limit","setLimit","useEffect","getTrending","axios","get","concat","then","response","console","log","data","catch","error","searchGif","alert","gifComponents","map","g","images","fixed_width","id","_Fragment","className","type","value","onChange","e","onKeyUp","key","Button","onClick","handleClick","handleTrendingClick","handleRandomClick","DropdownButton","onSelect","amount","size","Dropdown","Item","eventKey","Row","md","xs","App","Container","Col"],"sourceRoot":""}